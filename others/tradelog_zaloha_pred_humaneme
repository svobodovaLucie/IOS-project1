#!/bin/sh

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

print_help() {
    echo "Použití: tradelog [-h|--help] [FILTR] [PŘÍKAZ] [LOG [LOG2 [...]]                                      "
    echo "PŘÍKAZ může být jeden z následujících:                                                                "
    echo "      list-tick – výpis seznamu vyskytujících se burzovních symbolů, tzv. “tickerů”.                  "
    echo "      profit – výpis celkového zisku z uzavřených pozic.                                              "
    echo "      pos – výpis hodnot aktuálně držených pozic seřazených sestupně dle hodnoty.                     "
    echo "      last-price – výpis poslední známé ceny pro každý ticker.                                        "
    echo "      hist-ord – výpis histogramu počtu transakcí dle tickeru.                                        "
    echo "      graph-pos – výpis grafu hodnot držených pozic dle tickeru.                                      "
    echo "FILTR může být kombinace následujících:                                                               "
    echo "      -a DATETIME – after: jsou uvažovány pouze záznamy PO tomto datu (bez tohoto data).              "
    echo "                    DATETIME je formátu YYYY-MM-DD HH:MM:SS.                                          "
    echo "      -b DATETIME – before: jsou uvažovány pouze záznamy PŘED tímto datem (bez tohoto data).          "
    echo "      -t TICKER – jsou uvažovány pouze záznamy odpovídající danému tickeru. Při více výskytech        "
    echo "                  přepínače se bere množina všech uvedených tickerů.                                  "
    echo "      -w WIDTH – u výpisu grafů nastavuje jejich šířku, tedy délku nejdelšího řádku na WIDTH.         "
    echo "                 Tedy, WIDTH musí být kladné celé číslo. Více výskytů přepínače je chybné spuštění.   "
    echo "      -h a --help vypíšou nápovědu s krátkým popisem každého příkazu a přepínače.                     "
}

COMMAND=""
DATETIME_AFTER="0000-00-00 00:00:00"
DATETIME_BEFORE="9999-99-99 99:99:99"
TICKERS=""
WIDTH=""
LOG_FILES=""


# store arguments
while [ "$#" -gt 0 ]; do
    case "$1" in
        list-tick | profit | pos | last-price | hist-ord | graph-pos)
            if [ -z $COMMAND ]; then
                COMMAND="$1"
            else
                echo "Bylo zadano vice prikazu."
                exit 1
            fi
            echo "Zadan prikaz "$COMMAND
            shift 
            ;;
        --help | -h)
            print_help
            exit 0
            ;;
        -a)
            DATETIME_AFTER="$2"
            echo "Zadan prepinac a a $DATETIME_AFTER"
            shift; shift
            ;;
        -b)
            DATETIME_BEFORE="$2"
            echo "Zadan prepinac b a $DATETIME_BEFORE"
            shift; shift
            ;;
        -t)
            if [ -z "$TICKERS" ]; then
                TICKERS="$2"
                else 
                    TICKERS="$TICKERS|$2"
            fi
            echo "Zadan prepinac t a $TICKERS"
            shift; shift
            ;;
        -w)
            if [ -z "$WIDTH" ]; then
                WIDTH="$2"
            else
                echo "Zadano vice prepinacu -w"
                exit 1
            fi
            echo "Zadan prepinac -w a $WIDTH"
            shift; shift
            ;;
         *)
            if [ `echo $1 | grep "\.gz"` ]; then #'pokud soubor konci .gz, nacteme jej do GZ_LOG_FILES'
                GZ_LOG_FILES="$GZ_LOG_FILES $1"
            else 
                LOG_FILES="$LOG_FILES $1"
            fi
            shift
            ;;
    esac
done

## nacteni vstupu do promenne READ_INPUT
#
if ! [ -z "$GZ_LOG_FILES" ] && [ -z "$LOG_FILES" ]; then
    READ_INPUT=$(gzip -d -c $GZ_LOG_FILES)
elif ! [ -z "$GZ_LOG_FILES" ]; then
    READ_INPUT=$(gzip -d -c $GZ_LOG_FILES && cat $LOG_FILES)
else
    READ_INPUT=$(cat $LOG_FILES)
fi
# argumenty jsou ulozeny v jednotlivych promennych


## filtry

# datetime
READ_INPUT=$(echo "$READ_INPUT" | awk -F ';' -v date="$DATETIME_AFTER" '$1 > date {print $0}')
READ_INPUT=$(echo "$READ_INPUT" | awk -F ';' -v date="$DATETIME_BEFORE" '$1 < date {print $0}')

# tickers
if ! [ -z "$TICKERS" ]; then
    echo "TICKERS v ifu: "$TICKERS
#   READ_INPUT=$(echo "$READ_INPUT" | awk -F ';' '$2 == "GOOGL" {print $0}')
#   READ_INPUT=$(echo "$READ_INPUT" | grep -E "$TICKERS")


#TICKERS_ARRAY=$(echo $TICKERS | tr " ")
#for tic in "${TICKERS_ARRAY[@]}"
#do
#    READ_INPUT=$(echo "$READ_INPUT" | awk -F ';' -v ticker="$tic" '$2 == ticker {print $0}')
#done
#READ_INPUT=$(echo $READ_INPUT | awk -F ';' '\\$2 ~ /^(TICKERS)$/ {print \\$0}')
READ_INPUT=$(echo "$READ_INPUT" | awk -F ';' '\\$2 ~ /^(TICKERS)$/ {print \\$0}')
#READ_INPUT=$(echo $READ_INPUT | awk -F ';' '\2 ~ /^($TICKERS)$/ {print \$0}')

fi

#        #READ_INPUT=$(echo "$READ_INPUT" | awk -F ';' '{ if ($2==$TICKERS) {print $0}}')
#        if [ "$2" -eq "$TICKERS" ]; then
#

echo "$READ_INPUT"



# cyklus kdy bude postupne forem rozparsovavan TICKERS a if ! -z tak proved
#if ! [ -z "$TICKERS" ]; then
#    TICKER=$(echo "$TICKERS" | grep -f1)
#    READ_INPUT=$(echo "$READ_INPUT" | awk -F ';' -v ticker="$TICKER" '$2 == ticker {print $0}')
#    TICKERS=""
#fi

# vse je vyfiltrovane


## provedeni prikazu
<< COMMENT
# list-tick
case "$COMMAND" in
    list-tick)
        echo "COMMAND = list-tick"
        OUTPUT=$(echo "$READ_INPUT" | awk -F ';' '{print $2}' | sort | uniq)
        ;;
    profit)     # suma hodnot sell - suma hodnot buy
        echo "COMMAND = profit"
#        sell_sum=0
#        buy_sum=0
#        while read line
#        do
#            # sth
#        done

 #       OUTPUT=$(echo "$READ_INPUT" | awk -F ';' '')

        ;;
    pos)
        echo "COMMAND = pos"
        ;;
    last-price)
        echo "COMMAND = last-price"
        ;;
    hist-ord)
        echo "COMMAND = hist-ord"
        ;;
    graph-pos)
        echo "COMMAND = graph-pos"
        ;;
esac

echo "$OUTPUT"

# prikazy provedeny


## vypis vystupu

# konec programu




echo "$READ_INPUT"

COMMENT
